{"version":3,"sources":["shared/config.ts","components/TitleImage/TitleImage.tsx","components/ChartCard/ChartCard.tsx","components/Card/Card.tsx","components/Header/Header.tsx","components/Poll/Poll.tsx","components/Question/Question.tsx","components/PollNumber/PollNumber.tsx","components/PollWrapper/PollWrapper.tsx","App.tsx","serviceWorker.ts","index.tsx","trophyWeb.svg"],"names":["colors","fonts","mediaQueries","black","grey","title","baseText","mobile","ContainerAll","styled","Container","Img","ImgCredit","ImgTitle","ImgCaption","TitleImage","src","this","props","imgURL","alt","imgAlt","credit","imgTitle","imgCaption","React","Component","PieChart","className","css","data","options","maintainAspectRatio","display","text","fontFamily","fontSize","fontColor","legend","ChartCard","userData","dbData","CardLayout","Description","Headline","MiniBy","MiniText","BoxImage","Card","cardData","map","card","headline","author","blurb","notMobile","HeaderText","CapText","Trophy","Header","titleText","caption","captionText","trophyWeb","Item","Box","ButtonxD","Poll","ans","idx","incrementFunc","an","onClick","onAnswerClick","Quest","Question","q","PollText","CurPoll","CurPollText","PollNumber","numQuestions","numberOfQuestions","questionNumber","nums","Array","from","keys","thing","qNumber","PollWrapper","increment","state","ind","setState","answer","fetch","method","body","JSON","stringify","questionId","headers","console","log","showChart","ques","question","answers","bind","graph_data","datasets","backgroundColor","label","labels","App","then","results","json","query","siteTitle","siteDescription","Author","imageURL","imageAlt","articleCards","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.2dbb0f56.chunk.js","sourcesContent":["export const colors = {\n  gold: \"#F6D58B\",\n  black: \"#272526\",\n  grey: \"#C4C4C4\"\n};\n\nexport const fonts = {\n  title: \"Circular Std\",\n  baseText: \"Avenir\",\n  body: \"Avenir\"\n};\n\nexport const mediaQueries = {\n  mobile: \"@media (max-width: 700px)\",\n  notMobile: \"@media (min-width: 701px)\"\n};\n","import React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"styled-components\";\nimport { colors, fonts, mediaQueries } from \"../../shared/config\";\n\nconst { gold, black, grey } = colors;\nconst { title, baseText } = fonts;\nconst { mobile, notMobile } = mediaQueries;\n\nconst ContainerAll = styled(\"div\")`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  word-wrap: break-word;\n  width: 100%;\n  padding: 40px;\n  box-sizing: border-box;\n  ${mobile} {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst Container = styled(\"div\")`\n  justify-content: center;\n  margin: 10px 25px;\n  width: 40%;\n  ${mobile} {\n    width: 90%;\n    margin: 10px 10px;\n  }\n`;\n\nconst Img = styled(\"div\")`\n  background: ${grey};\n  width: 60%;\n  min-height: 200px;\n  margin: 20px 20px;\n  ${mobile} {\n    width: 90%;\n    align-items: center;\n  }\n`;\n\nconst ImgCredit = styled(\"div\")`\n  font-family: ${baseText};\n  font-size: 16px;\n  margin: 15px 15px;\n  color: ${black};\n`;\n\nconst ImgTitle = styled(\"div\")`\n  font-family: ${title};\n  font-weight: 900;\n  font-size: 40px;\n  margin: 20px 20px;\n  color: ${black};\n`;\n\nconst ImgCaption = styled(\"div\")`\n  font-family: ${baseText};\n  font-size: 18px;\n  margin: 15px 15px;\n  color: ${black};\n`;\n\ninterface TitleImageProps {\n  credit: string;\n  imgTitle: string;\n  imgCaption: string;\n  imgURL: string;\n  imgAlt: string;\n}\n\nexport default class TitleImage extends React.Component<TitleImageProps> {\n  render() {\n    return (\n      <ContainerAll>\n        <Img>\n          <img src={this.props.imgURL} alt={this.props.imgAlt}></img>\n        </Img>\n        <Container>\n          <ImgCredit>{this.props.credit}</ImgCredit>\n          <ImgTitle>{this.props.imgTitle}</ImgTitle>\n          <ImgCaption>{this.props.imgCaption}</ImgCaption>\n        </Container>\n      </ContainerAll>\n    );\n  }\n}\n","import React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { css } from \"emotion\";\nimport { colors, fonts } from \"../../shared/config\";\n\nconst { black } = colors;\nconst { title } = fonts;\n\nfunction PieChart(props) {\n  return (\n    <div\n      className={css`\n        width: 20vw;\n        height: 20vw;\n        @media (max-width: 1200px) {\n          width: 25w;\n          height: 25vw;\n          margin-bottom: 5vh;\n        }\n        @media (max-width: 800px) {\n          width: 40vw;\n          height: 40vw;\n          margin-bottom: 5vh;\n        }\n      `}\n    >\n      <Pie\n        data={props.data}\n        options={{\n          maintainAspectRatio: false,\n          title: {\n            display: true,\n            text: props.title,\n            fontFamily: \"Calibri\",\n            fontSize: 30,\n            fontColor: black\n          },\n          legend: {\n            display: false\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nfunction ChartCard(props) {\n  return (\n    <div>\n      <div\n        className={css`\n          display: flex;\n          justify-content: center;\n          flex-wrap: wrap;\n        `}\n      >\n        <div\n          className={css`\n            margin: 0 10vw;\n          `}\n        >\n          <PieChart title=\"User Votes\" data={props.userData} />\n        </div>\n        <div\n          className={css`\n            margin: 0 10vw;\n          `}\n        >\n          <PieChart title=\"DB Votes\" data={props.dbData} />\n        </div>\n      </div>\n\n      <div>\n        <button\n          className={css`\n            border: 1px solid grey;\n            background-color: white;\n            height: 40px;\n            width: 100px;\n            position: relative;\n            bottom: 50px;\n            font-size: 30px;\n            font-weight: bold;\n            @media (max-width: 800px) {\n              bottom: 0px;\n            }\n          `}\n        >\n          NEXT\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ChartCard;\n","import React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"styled-components\";\nimport Picture from \"../../images/Rectangle 37.png\";\nimport { colors, fonts, mediaQueries } from \"../../shared/config\";\n\nconst { gold, black } = colors;\nconst { mobile, notMobile } = mediaQueries;\n\nconst Container = styled(\"div\")`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: flex-start;\n  color: ${black};\n  width: 80%;\n  margin: 3%;\n  text-align: center;\n  align-content: center;\n\n  ${mobile} {\n  }\n`;\n\nconst CardLayout = styled(\"div\")`\n  margin-top: 2%;\n  width: 50%;\n\n  ${mobile} {\n    flex-direction: row;\n    display: flex;\n    padding-bottom: 1%;\n  }\n`;\n\nconst Description = styled(\"div\")`\n  ${mobile} {\n    justify-content: flex-end;\n    flex-direction: column;\n  }\n`;\n\nconst Headline = styled(\"div\")`\n  flex: 0 50%;\n  height: 100px;\n  margin-bottom: 2%; /* (100-50*2)/2 */\n  color: ${black};\n  font-size: 40px;\n  font-weight: 900;\n  /* font-family: Avenir; */\n  margin: auto;\n  width: 50%;\n  padding: 4%;\n  text-align: center;\n  word-wrap: break-word;\n\n  ${mobile} {\n    width: 70%;\n    height: auto;\n    font-size: 30px;\n    padding: 4%;\n  }\n`;\n\nconst MiniBy = styled(\"div\")`\n  font-size: 18px;\n  margin: auto;\n  /* font-family: Avenir; */\n  width: 70%;\n  padding-bottom: 3%;\n\n  ${mobile} {\n    font-size: 16px;\n    padding-bottom: 10%;\n  }\n`;\n\nconst MiniText = styled(\"div\")`\n  font-size: 18px;\n  margin: auto;\n  /* font-family: Avenir; */\n  width: 70%;\n  padding-bottom: 7%;\n\n  ${mobile} {\n    display: none;\n  }\n`;\n\nconst BoxImage = styled(\"div\")`\n  width: 65%;\n  height: 213px;\n  background: #c4c4c4;\n  margin: auto;\n\n  ${mobile} {\n    width: 50%;\n    height: 100%;\n    justify-content: flex-start;\n  }\n`;\n\nlet testing = [\n  \"BeEp BOOp TITLE YEY\",\n  \"BeEp BOOp TITLE YEY\",\n  \"BeEp BOOp TITLE YEY\",\n  \"BeEp BOOp TITLE YEY\"\n];\n\ninterface CardProps {\n  cardData: {\n    author: string;\n    imgURL: string;\n    imgAlt: string;\n    headline: string;\n    blurb: string;\n  }[];\n}\n\nexport default class Card extends React.Component<CardProps> {\n  render() {\n    const { cardData } = this.props;\n    return (\n      <Container>\n        {cardData.map(card => (\n          <CardLayout>\n            <BoxImage>\n              <img src={card.imgURL} alt={card.imgAlt} />{\" \"}\n            </BoxImage>\n            <Description>\n              <Headline>{card.headline}</Headline>\n              <MiniBy>{card.author}</MiniBy>\n              <MiniText>{card.blurb}</MiniText>\n            </Description>\n          </CardLayout>\n        ))}\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"styled-components\";\nimport { colors, fonts, mediaQueries } from \"../../shared/config\";\n\nimport trophyWeb from \"../../trophyWeb.svg\";\n\nconst { gold, black } = colors;\nconst { mobile, notMobile } = mediaQueries;\n\nconst Container = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst HeaderText = styled(\"div\")`\n  /* font-family: Circular Std; */\n  font-style: normal;\n  font-weight: 900;\n  font-size: 96px;\n  width: 100%;\n  text-align: center;\n  color: ${black};\n\n  ${mobile} {\n    font-weight: 900;\n    font-size: 50px;\n  }\n`;\n\nconst CapText = styled(\"div\")`\n  /* font-family: Avenir; */\n  font-style: normal;\n  font-weight: normal;\n  font-size: 24px;\n  align-items: center;\n  text-align: center;\n  color: ${black};\n  width: 100%;\n  margin-bottom: 5%;\n`;\n\nconst Trophy = styled(\"img\")`\n  margin-top: 5%;\n  ${notMobile} {\n    height: 241px;\n    width: auto;\n  }\n  ${mobile} {\n    height: 165px;\n    width: auto;\n  }\n`;\n\ninterface HeaderProps {\n  titleText: string;\n  captionText: string;\n}\n\nexport default class Header extends React.Component<HeaderProps> {\n  render() {\n    const title = this.props.titleText;\n    const caption = this.props.captionText;\n\n    return (\n      <Container>\n        <Trophy src={trophyWeb} />\n        <HeaderText>{title}</HeaderText>\n        <CapText>{caption}</CapText>\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"styled-components\";\n\nconst Container = styled(\"div\")`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Item = styled(\"div\")`\n  width: 32%;\n  padding-bottom: 0%; /* 32:18, i.e. 16:9 */\n  margin-bottom: 2%; /* (100-32*3)/2 */\n`;\n\nconst Box = styled(\"div\")`\n  font-style: normal;\n  font-weight: 300;\n  font-size: 18px;\n  line-height: 25px;\n\n  /* identical to box height */\n  /* text-transform: uppercase; */\n\n  color: #434343;\n\n  background: #e1e1e1;\n  border-radius: 41.5px;\n`;\n\ninterface PollState {}\nconst ButtonxD = styled(\"button\")`\n  border: none;\n  background: #f5f5f5;\n`;\n\ninterface PollState {\n  showChart: number;\n  ind: number;\n}\n\ninterface PollProps {\n  ans: string[];\n  incrementFunc: any;\n}\n\nexport default class Poll extends React.Component<PollProps, PollState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  onAnswerClick(ans: string, idx: number): any {\n    this.props.incrementFunc();\n    // this.props.answer = ans;\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.props.ans.map((an, idx) => (\n          <Item>\n            <ButtonxD onClick={() => this.onAnswerClick(an, idx)}>\n              <Box>{an}</Box>\n            </ButtonxD>\n          </Item>\n        ))}\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"styled-components\";\n\nconst Quest = styled(\"div\")`\n  /* font-family: Avenir; */\n  font-style: normal;\n  font-weight: normal;\n  font-size: 30px;\n  line-height: 41px;\n  /* identical to box height */\n\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n  margin-bottom: 2%;\n\n  color: #272526;\n`;\n\ninterface PollState {}\n\ninterface PollProps {\n  q: string;\n}\n\nexport default class Question extends React.Component<PollProps, PollState> {\n  constructor(props: any) {\n    super(props);\n  }\n  render() {\n    return <Quest>{this.props.q}</Quest>;\n  }\n}\n","import React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"styled-components\";\n\nconst Container = styled(\"div\")`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  padding: 5px;\n`;\n\nconst Poll = styled(\"div\")`\n  width: 47px;\n  height: 47px;\n  left: 562px;\n  top: 2307px;\n\n  display: flex;\n  border: 1px solid #272526;\n  border-radius: 26px;\n  justify-content: center;\n  margin: 5px; /* and that, will result in a 10px gap */\n`;\n\nconst PollText = styled(\"div\")`\n  display: flex;\n  font-style: normal;\n  font-weight: 900;\n  font-size: 24px;\n  line-height: 2px;\n  text-transform: uppercase;\n\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n\n  color: #272526;\n`;\n\nconst CurPoll = styled(\"div\")`\n  width: 94px;\n  height: 47px;\n\n  display: flex;\n  border: 1px solid #272526;\n  border-radius: 26px;\n  justify-content: center;\n  border-radius: 50%;\n\n  color: #ffffff;\n  background: #272526;\n  border-radius: 23.5px 26px 26px 26px;\n  margin: 5px; /* and that, will result in a 10px gap */\n`;\n\nconst CurPollText = styled(\"div\")`\n  display: flex;\n  font-style: normal;\n  font-weight: 900;\n  font-size: 24px;\n  line-height: 2px;\n  text-transform: uppercase;\n\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n\n  color: #f5f5f5;\n`;\n\ninterface PollState {\n  showChart: number;\n  ind: number;\n}\n\ninterface PollProps {\n  questionNumber: number;\n  numberOfQuestions: number;\n}\n\nexport default class PollNumber extends React.Component<PollProps, PollState> {\n  constructor(props: any) {\n    super(props);\n  }\n  render() {\n    let numQuestions = this.props.numberOfQuestions;\n\n    const { questionNumber } = this.props;\n    const nums = Array.from(Array(numQuestions).keys());\n\n    return (\n      <Container>\n        {nums.map(thing => {\n          let qNumber = thing + 1;\n          if (qNumber == questionNumber) {\n            return (\n              <CurPoll>\n                <CurPollText>{questionNumber}</CurPollText>\n              </CurPoll>\n            );\n          }\n          return (\n            <Poll>\n              <PollText>{qNumber}</PollText>\n            </Poll>\n          );\n        })}\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"styled-components\";\nimport Poll from \"../Poll/Poll\";\nimport Question from \"../Question/Question\";\nimport PollNumber from \"../PollNumber/PollNumber\";\n\ninterface PollState {\n  ind: number;\n  showChart: number;\n  ques: {\n    question: string;\n    answers: string[];\n    questionNumber: number;\n  }[];\n  numberOfQuestions: number;\n  answer: string;\n}\n\ninterface PollProps {}\n\nexport default class PollWrapper extends React.Component<PollProps, PollState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      showChart: 0,\n      ind: 0,\n      answer: \" \",\n      ques: [\n        {\n          question: \"sksksks\",\n          answers: [\n            \"JED\",\n            \"TYLER\",\n            \"beter\",\n            \"LUKE\",\n            \"GARRETTE\",\n            \"MIKE\",\n            \"CONNOR\",\n            \"DUSTIN\",\n            \"MAX WU\"\n          ],\n          questionNumber: 1\n        },\n        {\n          question: \"shizzle\",\n          answers: [\n            \"JED\",\n            \"TYLER\",\n            \"PETER\",\n            \"LUKE\",\n            \"GARRETTE\",\n            \"MIKE\",\n            \"CONNOR\",\n            \"DUSTIN\",\n            \"MAX WU\"\n          ],\n          questionNumber: 2\n        },\n        {\n          question: \"GOOD SHIzzle\",\n          answers: [\n            \"JED\",\n            \"TYLER\",\n            \"PETER\",\n            \"LUKE\",\n            \"GARRETTE\",\n            \"MIKE\",\n            \"CONNOR\",\n            \"DUSTIN\",\n            \"MAX WU\"\n          ],\n          questionNumber: 3\n        },\n        {\n          question: \"duck my life\",\n          answers: [\n            \"JED\",\n            \"TYLER\",\n            \"PETER\",\n            \"LUKE\",\n            \"GARRETTE\",\n            \"MIKE\",\n            \"CONNOR\",\n            \"DUSTIN\",\n            \"MAX WU\"\n          ],\n          questionNumber: 4\n        },\n        {\n          question: \"I'm tired\",\n          answers: [\n            \"JED\",\n            \"TYLER\",\n            \"PETER\",\n            \"LUKE\",\n            \"GARRETTE\",\n            \"MIKE\",\n            \"CONNOR\",\n            \"DUSTIN\",\n            \"MAX WU\"\n          ],\n          questionNumber: 5\n        }\n      ],\n      // can I even do this\n      // numberOfQuestions: this.state.ques.length\n      numberOfQuestions: 5\n    };\n    this.increment = this.increment.bind(this);\n  }\n  increment = () => {\n    if (this.state.ind < this.state.numberOfQuestions - 1)\n      this.setState({ ind: this.state.ind + 1 });\n    this.setState({\n      answer: \"xD\"\n    });\n    try {\n      fetch(\n        \"http://interactive-oscars-2020.interactive-2020-oscars.primary.dailybruin.com:14765/api/sendanswer\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            answer: this.state.answer,\n            questionId: 0\n          }), // data can be string or {object}!\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }\n      );\n    } catch {\n      console.log(\"rip\");\n    }\n  };\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Question q={this.state.ques[this.state.ind].question}></Question>\n        <Poll\n          incrementFunc={this.increment}\n          ans={this.state.ques[this.state.ind].answers}\n        ></Poll>\n        <PollNumber\n          questionNumber={this.state.ques[this.state.ind].questionNumber}\n          numberOfQuestions={this.state.numberOfQuestions}\n        ></PollNumber>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Poll from \"./components/Poll/Poll\";\nimport Question from \"./components/Question/Question\";\nimport PollNumber from \"./components/PollNumber/PollNumber\";\nimport TitleImage from \"./components/TitleImage/TitleImage\";\nimport ChartCard from \"./components/ChartCard/ChartCard\";\nimport Card from \"./components/Card/Card\";\nimport Header from \"./components/Header/Header\";\nimport PollWrapper from \"./components/PollWrapper/PollWrapper\";\n\nimport { css } from \"emotion\";\n\nconst TitleImageProps = {\n  credit: \"by this author\",\n  imgTitle: \"WE PREDICTED THE WINNERS\",\n  imgCaption:\n    \"yes we predicted the oscars yes we predicted the oscars yes we predicted the oscars\",\n  imgURL: \"imagfeurl\"\n};\n\nconst graph_data = {\n  datasets: [\n    {\n      data: [1, 2, 3],\n      backgroundColor: [\"#F6D58B\", \"#abcdef\", \"green\"],\n      label: \"Dataset 1\"\n    }\n  ],\n  labels: [\"hi\", \"bye\", \"yeet\"]\n};\n\nconst headProps = {\n  titleText: \"the oscars oo\",\n  captionText: \"little words go with title :3\"\n};\n\ninterface AppState {\n  query: any; // TODO: specify data format\n}\n\nexport default class App extends React.Component<{}, AppState> {\n  componentDidMount() {\n    const kerckhoffAPI =\n      \"https://kerckhoff.dailybruin.com/api/packages/flatpages/interactive.2020.oscars\";\n    fetch(kerckhoffAPI, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" }\n    })\n      .then(results => results.json())\n      .then(results => this.setState({ query: results }));\n  }\n\n  render() {\n    if (!this.state) return <></>;\n    const data = this.state.query.data[\"site.aml\"];\n    console.log(data);\n    return (\n      <div\n        className={css`\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n        `}\n      >\n        <Header titleText={data.siteTitle} captionText={data.siteDescription} />\n        <TitleImage\n          credit={data.Author}\n          imgTitle={data.Headline}\n          imgCaption={data.blurb}\n          imgURL={data.imageURL}\n          imgAlt={data.imageAlt}\n        ></TitleImage>\n        <PollWrapper />\n        <ChartCard userData={graph_data} dbData={graph_data} />\n        <br></br>\n        <Card cardData={data.articleCards}> </Card>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/trophyWeb.d38da198.svg\";"],"sourceRoot":""}